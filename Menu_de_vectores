#include <iostream>
#define MAX 100

using namespace std;

void Cargar(int vec[], int n);
void Mostrar(int vec[], int n);
void Sumar(int vec1[], int vec2[], int n, int m, int vec3[], int &tam);
float Promedio(int vec[], int n);
int EncontrarMayor(int vec[], int n);
int EncontrarMenor(int vec[], int n);
void Unir(int vec1[], int n, int m, int vec2[], int vec3[], int &tam);
void Burbuja(int vec[], int n);

int main()
{
    int n, l, A[MAX], B[MAX], C[MAX], opcion = 0, m, tam=0;

    do {
        cout << "MENU" << endl;
        cout << "============" << endl;
        cout << "1. Cargar Vectores" << endl;
        cout << "2. Mostrar vectores" << endl;
        cout << "3. Sumar dos vectores" << endl;
        cout << "4. Promedio" << endl;
        cout << "5. Elemento mayor de un vector" << endl;
        cout << "6. Elemento menor de un vector" << endl;
        cout << "7. Burbuja" << endl;
        cout << "8. Unir los vectores A y B" << endl;
        cout << "0. Salir" << endl;
        cin >> opcion;
        switch (opcion) {
        case 1:
            cout << "Cual vector va a cargar?";
            cin >> m;
            if (m == 1) {
                cout << "Cuantos elementos va a cargar?";
                cin >> n;
                Cargar(A, n);
            }
            else if (m == 2) {
                cout << "Cuantos elementos va a cargar?";
                cin >> l;
                Cargar(B, l);
            }
            else
                cout << "Numero de vector no valido";
            break;
        case 2:
            cout << "Cual vector va a cargar?";
            cin >> m;
            if (m == 1) {
                cout << "Cuantos elementos va a cargar?";
                cin >> n;
                Cargar(A, n);
            }
            else if (m == 2) {
                cout << "Cuantos elementos va a cargar?";
                cin >> l;
                Cargar(B, l);
            } else if (m == 3) {
                    Cargar(C, tam);
                }
                else
                    cout << "Numero de vector no valido";
            break;
        case 3:
            cout << "Solo se va a sumar hasta el limite del vector mas pequenio";
            Sumar(A, B, n, l, C, tam); 
            break;
        case 4:
            cout << "De cual vector se quiere saber el promedio?";
            cin >> m;
            if (m == 1)
                cout << "El promedio del primer vector es: " << Promedio(A, n) << endl;
            if (m == 2)
                cout << "El promedio del segundo vector es: " << Promedio(B, l) << endl;
            if (m == 3)
                cout << "El promedio del segundo vector es: " << Promedio(C, tam) << endl;
            break;
        case 5:
            cout << "De cual vector se quiere saber su elemento mayor?";
            cin >> m;
            if (m == 1)
                cout << "El elemnto mayor del primer vector es: " << EncontrarMayor(A, n) << endl;
            if (m == 2)
                cout << "El elemento mayor del segundo vector es: " << EncontrarMayor(B, l) << endl;
            if (m == 2)
                cout << "El elemento mayor del segundo vector es: " << EncontrarMayor(C, tam) << endl;
            break;
        case 6:
            cout << "De cual vector se quiere saber su elemento menor?";
            cin >> m;
            if (m == 1)
                cout << "El elemnto menor del primer vector es: " << EncontrarMenor(A, n) << endl;
            if (m == 2)
                cout << "El elemento menor del segundo vector es: " << EncontrarMenor(B, l) << endl;
            if (m == 2)
                cout << "El elemento menor del segundo vector es: " << EncontrarMenor(C, tam) << endl;
            break;
        case 7:
            cout << "Que vector va a reordenar?";
            cin >> m;
            if (m == 1)
                Burbuja(A, n);
            else if (m == 2)
                Burbuja(B, l);
            else if (m == 3); 
                Burbuja(C, tam);
            break;
        case 8:
            Unir(A, n, l, B, C, tam); 
            break;
        case 0:
            cout << "Salir";
            break;
        default:
            cout << "Opcion Invalida";
            break;
        }
    } while (opcion != 0);

    return 0;
}

void Cargar(int vec[], int n) {
    for (int i = 0; i < n; i++)
    {
        cout << "Vector[" << i << "]= ";
        cin >> vec[i];
    }
}

void Mostrar(int vec[], int n)
{
    for (int i = 0; i < n; i++)
        cout << "Vector[" << i << "]= " << vec[i] << endl;
}

void Sumar(int vec1[], int vec2[], int n, int m, int vec3[], int &tam) {
    if (n > m) {
        tam = m;
        for (int i = 0; i < m; i++)
            vec3[i] = vec1[i] + vec2[i];
    }
    else if (m > n) {
        tam = n;
        for (int i = 0; i < n; i++)
            vec3[i] = vec1[i] + vec2[i];
    }
    else {
        tam = n; 
        for (int i = 0; i < n; i++)
            vec3[i] = vec1[i] + vec2[i];
    }
}

float Promedio(int vec[], int n) {
    float prom = vec[0];
    for (int i = 1; i < n; i++)
        prom = prom + vec[i];

    return prom / n;
}

int EncontrarMayor(int vec[], int n) {
    int mayor = vec[0];
    for (int i = 1; i < n; i++)
        if (mayor < vec[i])
            mayor = vec[i];

    return mayor;
}

int EncontrarMenor(int vec[], int n) {
    int menor = vec[0];
    for (int i = 1; i < n; i++)
        if (menor > vec[i])
            menor = vec[i];

    return menor;
}

void Unir(int vec1[], int n, int m, int vec2[], int vec3[], int &tam) {
    tam = n + m; 
    for (int i = 0; i < n; i++)
        vec3[i] = vec1[i];
    for (int i = n; i < tam; i++)
        vec3[i] = vec2[i - n];
}

void Burbuja(int vec[], int n)
{
    int aux;
    for (int i = 0; i < n - 1; i++)
    {
        for (int j = i + 1; j < n; j++)
            if (vec[i] > vec[j])
            {
                aux = vec[j];
                vec[j] = vec[i];
                vec[i] = aux;
            }
    }
}
